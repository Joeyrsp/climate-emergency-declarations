# make a role 
aws --profile=xpatiate iam create-role --role-name lambda-ex --assume-role-policy-document file://trust-policy.json

# add permission to execute lambdas
aws --profile=xpatiate iam attach-role-policy --role-name lambda-ex --policy-arn arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

# in console, edited role and attached AmazonS3ReadOnlyAccess

# create a function
aws --profile=xpatiate lambda create-function --function-name uploaded-function --zip-file=fileb://cli-function.zip --runtime=python3.8 --role=arn:aws:iam::109167404158:role/lambda-ex --handler=index.lambda_handler --region=us-east-2

# create a django function
aws --profile=xpatiate lambda create-function --function-name generate-timeline --zip-file=https://cegov-lambda-function-code.s3.us-east-2.amazonaws.com/django-function.zip --runtime=python3.8 --role=arn:aws:iam::109167404158:role/lambda-ex --handler=run_lambda.main --region=us-east-2


https://github.com/jkehler/awslambda-psycopg2

to make django-function.zip

rm ~/cegov/django-function.zip
cd ~/cegov
cp ~/repo/awslambda-psycopg2/psycopg2-3.6 psycopg2
zip -r ~/cegov/django-function.zip  psycopg2
cd .venv/lib/python3.6/site-packages
zip -r ~/cegov/django-function.zip *
cd ~/cegov
zip -r django-function.zip ced_bg govtrack run_lambda.py manage.py
